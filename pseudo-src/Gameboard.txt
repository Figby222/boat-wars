Create Gameboard class
    could store an array of boats
    in placeboat, could check if coordinates in boats
    in receiveAttack, could check if coordinates in boats
    in checkFleet, could check if each boat in boats => boat.isSunk()



    3d array board

    place ships at specific coordinates
    by calling ship factory

    receiveAttack() takes coordinates [x, y]

    array of missed attacks

    check if boats have been sunk

    create function setBoard()
        set board to []
        for 0 < 10
            push [] to board


    create function placeBoat(boat, direction, [x, y])
        set board to this.board
        while direction is horizontal and 0 < boat.length
            throw error if coordinates are out of bounds
            if board[x+i][y] has a boat
                throw error with message that cell is taken up

            set board[x+i][y] to boat
        while direction is vertical and 0 < boat.length
            throw error if coordinates are out of bounds
            if board[x][y+i] has a boat
                throw error with message that cell is taken up
            
            set board[x][y+i] to boat

        return board (OR SET THIS.BOARD TO BOARD)
    
    create function receiveAttack(coordinates)
        deconstruct coordinates into x and y
        throw error of coordinates are out of bounds
        throw error if coordinates have already been hit
        if ship at coordinates call ship.hit on ship
        push coordinates to this.hits
    
    create function checkFleet()
        for each row in board
            for each ship in row
                if ship is not null and ship is damaged
                    return false

        return true

Create Cell class
    constructor takes an arg "boat = null"
        set this.boat to boat