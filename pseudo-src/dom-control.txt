create DOMControl class
    create function renderGameboard(gameboard, id)
        Set boardContainer to div#id
        for each column of Gameboard.board
            create columnContainer
            add column class to columnContainer
            add index class to columnContainer
            for each cell of column
                create cellContainer
                add cell class to cellContainer
                set x to columnIndex;
                set y to cellIndex;
                add <columnIndex>-<cellIndex> class to cellContainer
                append cellContainer to columnContainer
                add click listener to cellContainer 
                    using cellEventHandler
            append columnContainer to boardContainer
        append container to DOM



OR: 
create DOMControl class
    create function renderGameboard(gameboard, id)
        Set boardContainer to div#id
        for each column of Gameboard.board
            create columnContainer
            add column class to columnContainer
            add index class to columnContainer
            for each cell of column
                create cellContainer
                add cell class to cellContainer
                set x to columnIndex;
                set y to cellIndex;
                add <columnIndex>-<cellIndex> class to cellContainer
                append cellContainer to columnContainer
                add click listener to cellContainer 
                    using cellEventHandler
            append columnContainer to boardContainer
        append container to DOM

    create function _hitCell(container, gameboard, coordinates)
        set boatHit to gameboard.receiveAttack(coordinates)
        if boatHit
            set container's bgcolor to red
        else
            set container's bgcolor to gray
        
        remove event listener
            
OR: 
create DOMControl class
    create function renderGameboard(gameboard, id)
        Set boardContainer to div#id
        for each column of Gameboard.board
            create columnContainer
            add column class to columnContainer
            add index class to columnContainer
            for each cell of column
                create cellContainer
                add cell class to cellContainer
                set x to columnIndex;
                set y to cellIndex;
                if missed hit at gameboard.board[x][y]
                    set cellContainer bgcolor to blue
                else if boat at gameboard.board[x][y]
                    set cellContainer bgcolor to darkGray
                else 
                    set cellContainer bgcolor to white
                add click listener to cellContainer 
                    using cellEventHandler
                if classList contains .notHit
                    add click event listener
                        if boardContainer classList contains .turn 
                            remove .turn from boardContainer
                            remove .notHit
                            receiveAttack at coordinates
                            renderGameboard
                OR:
                    add empty cell class to cells without boat
                    in event listener:
                        if boardContainer classList contains .turn 
                            remove .turn from boardContainer
                            add hit class to cellContainer 
                            remove event listener
                    in style sheet:
                        add dark gray bgcolor to .empty-cell.hit
                append cellContainer to columnContainer
            append columnContainer to boardContainer
        append container to body

&& 
create arrow function cellEventHandler
    call gameboard.receiveAttack([x, y])






create arrow function cellEventHandler
    call _hitCell(cellContainer, gameboard, [x, y])
create arrow function cellEventHandler
    call _hitCell(cellContainer, gameboard, [x, y])
    


make Gameboard.receiveAttack return true if hit and false if miss